#######################################################
# This file can be used to override the default
# settings described in oskari.properties
#######################################################

# change to match your database connection parameters
db.url=jdbc:postgresql://postgres:5432/oskari
db.username=oskari
db.password=supersalainen_oskarin_salasana

db.additional.modules=myplaces, tre, filedl, tre3d

# path to frontend code (absolute or relative to current work dir)
oskari.client.location=/opt/oskari/public/tampere-frontend

# file download dervice file storage path
file.storage.folder=/data/filedl

# oskari minified version
oskari.client.version=dist/1.13.0-dev
oskari.client.domain=https://kartat.tampere.fi/oskaritest

geoserver.url=http://localhost:7703/geoserver
geoserver.user=oskari
geoserver.password=supersalainen_oskarin_salasana

# initialized the user content like myplaces baselayers with this srs
# layers are also updated by setup.war if used to generate GeoServer config
oskari.native.srs=EPSG:3067

# Ota pois kommenteista jos migraatiot ei mene läpi checksumin takia
db.flyway.autorepair=true

oskari.logger=fi.nls.oskari.utils.Log4JLogger

# url path to call for ajax requests/action routes
oskari.ajax.url.prefix=/oskaritest/action?

# Supported locales, comma separated and default first
oskari.locales=fi_FI,en_EN,sv_SE

# "CMS content" files location
actionhandler.GetArticlesByTag.dir=/articlesByTag/

#Oskari terms url
oskari.map.terms.url=https://www.tampere.fi/kartta/karttapalvelun-kayttoehdot

###################################
# Login profiles/configurations
###################################
# Comma-separated list of spring profiles to use
# Basic auth profile is 'LoginDatabase' which uses database tables to authenticate.
# To disable login option remove it from 'oskari.profiles'
oskari.profiles=LoginDatabase,oauth2

# add users from SAML to Oskari so we have an ID to use for myplaces etc
auth.add.missing.users = true

#oskari.domain=http://193.111.93.18
oskari.domain=https://kartat.tampere.fi
oskari.map.url=/oskaritest

# Allow published maps to be loaded from these domains
view.published.usage.unrestrictedDomains = tampere.fi, 193.111.93.18

##################################
# Configurations specific to database content
##################################
# Used to configure a template view for publishing maps, defaults to view with id 1
view.template.publish=3
view.default=1

# Base WFS layer id for myplaces (from portti_maplayer table)
# Find the correct layer id from the database or create a myplaces layer if not found
myplaces.baselayer.id=1
# My places namespace
myplaces.xmlns=http://www.oskari.org
# My places namespace prefix
myplaces.xmlns.prefix=oskari
featureNS=http://www.oskari.org

myplaces.ows.url=http://localhost:7703/geoserver/oskari/ows?
myplaces.wms.url=http://localhost:7703/geoserver/oskari/wms?buffer=128&tiled=yes&tilesorigin=0,0&CQL_FILTER=
myplaces.user=myplaces-user
myplaces.password=supersalainen_oskarin_salasana


##################################
# Configuring search channel implementations for search services.
# Properties are prefixed with 'search.channel.[CHANNEL ID].':
#   className indicates the implementation class
#   other properties are passed on to the implementation class.
##################################
# OpenStreetMap search channel settings

# comma-separated list of search channel ids that should be registered for search service
# defaults to all found search channels, only use to limit search channels that can be used
search.channels=METADATA_CATALOGUE_CHANNEL
search.channel.WFSSEARCH_CHANNEL.maxFeatures = 100

##################################


##################################
# Configurations for action handlers
##################################
# comma-separated list of search channel ids used by GetSearchResult
actionhandler.GetAppSetup.dynamic.bundles = admin-layerrights, admin, admin-users, mydata, publisher2, myplaces3, admin-wfs-search-channel,admin-layereditor, admin-announcements
actionhandler.GetAppSetup.dynamic.bundle.admin-hierarchical-layerlist.roles = Admin
actionhandler.GetAppSetup.dynamic.bundle.admin-wfs-search-channel.roles = Admin
#actionhandler.GetAppSetup.dynamic.bundle.admin-layerselector.roles = Admin, PIRLI_ROLE
actionhandler.GetAppSetup.dynamic.bundle.mydata.roles = User
actionhandler.GetAppSetup.dynamic.bundle.myplaces3.roles = User
actionhandler.GetAppSetup.dynamic.bundle.publisher2.roles = User
actionhandler.GetAppSetup.dynamic.bundle.content-editor.roles = Admin
actionhandler.GetAppSetup.dynamic.bundle.admin-layereditor.roles = Admin
actionhandler.GetAppSetup.dynamic.bundle.admin-announcements.roles = Admin

actionhandler.GetWSCapabilitiesHandler.roles=PIRLI_ROLE

##################################
# CSW-metadata configuration
# Example config for sample-app for the Finland centric app
##################################
# Used by metadata flyout/CSW coverage scheduled task
service.metadata.url=https://www.paikkatietohakemisto.fi/geonetwork/srv/fin/csw

#Metadata catalogue search channel settings
search.channel.METADATA_CATALOGUE_CHANNEL.query.url=https://www.paikkatietohakemisto.fi/geonetwork/srv/fin/csw
search.channel.METADATA_CATALOGUE_CHANNEL.server.url=https://www.paikkatietohakemisto.fi
# image filenames are prefixed with this - paikkatietohakemisto
#search.channel.METADATA_CATALOGUE_CHANNEL.image.url.fi=https://www.paikkatietohakemisto.fi/geonetwork/srv/fi/resources.get.uuid?access=public&
#search.channel.METADATA_CATALOGUE_CHANNEL.image.url.sv=https://www.paikkatietohakemisto.fi/geonetwork/srv/sv/resources.get.uuid?access=public&
#search.channel.METADATA_CATALOGUE_CHANNEL.image.url.en=https://www.paikkatietohakemisto.fi/geonetwork/srv/en/resources.get.uuid?access=public&

# metadatasearch results in liferay portal search use this as base url (updated for GN3)
search.channel.METADATA_CATALOGUE_CHANNEL.fetchpage.url.fi=https://www.paikkatietohakemisto.fi/geonetwork/srv/fin/catalog.search#/metadata/
search.channel.METADATA_CATALOGUE_CHANNEL.fetchpage.url.sv=https://www.paikkatietohakemisto.fi/geonetwork/srv/swe/catalog.search#/metadata/
search.channel.METADATA_CATALOGUE_CHANNEL.fetchpage.url.en=https://www.paikkatietohakemisto.fi/geonetwork/srv/eng/catalog.search#/metadata/

# Metadata catalogue channel config
search.channel.METADATA_CATALOGUE_CHANNEL.metadata.catalogue.server=https://www.paikkatietohakemisto.fi
search.channel.METADATA_CATALOGUE_CHANNEL.metadata.catalogue.path=/geonetwork/srv/fin/csw
search.channel.METADATA_CATALOGUE_CHANNEL.metadata.catalogue.queryParams=SERVICE=CSW&VERSION=2.0.2&request=GetDomain&PropertyName=
# List of fields to show in advanced form (values retrieved by GetDomain requests)
search.channel.METADATA_CATALOGUE_CHANNEL.fields=type,Title,OrganisationName,Subject,TopicCategory,Language,ResourceLanguage,coverage
# isMulti means user can select multiple values ie. checkbox vs. dropdown
search.channel.METADATA_CATALOGUE_CHANNEL.field.type.isMulti=true
search.channel.METADATA_CATALOGUE_CHANNEL.field.type.blacklist=service
search.channel.METADATA_CATALOGUE_CHANNEL.field.Title.filter=gmd:title
search.channel.METADATA_CATALOGUE_CHANNEL.field.TopicCategory.filter=gmd:topicCategory
# fields without filterOp are treated as LIKE operations, filterOp param value is mapped in code to deegree operations
search.channel.METADATA_CATALOGUE_CHANNEL.field.Subject.filterOp=COMP_EQUAL
search.channel.METADATA_CATALOGUE_CHANNEL.field.serviceType.filterOp=COMP_EQUAL
search.channel.METADATA_CATALOGUE_CHANNEL.field.coverage.filterOp=INTERSECTS
# must match means that this will be a top level filter element added as AND-operations (where as most other fields are added as OR)
search.channel.METADATA_CATALOGUE_CHANNEL.field.Language.mustMatch=true
search.channel.METADATA_CATALOGUE_CHANNEL.field.ResourceLanguage.mustMatch=true

#######################################
# OLD Metadata related
#######################################
#Metadata catalogue search channel settings

#service.metadata.url=http://www.paikkatietohakemisto.fi/geonetwork/srv/fi/csw
#search.channel.METADATA_CATALOGUE_CHANNEL.query.url=http://geonetwork.nls.fi/geonetwork/srv/en/csw
#search.channel.METADATA_CATALOGUE_CHANNEL.server.url=http://geonetwork.nls.fi
#search.channel.METADATA_CATALOGUE_CHANNEL.metadata.catalogue.server=http://geonetwork.nls.fi
#search.channel.METADATA_CATALOGUE_CHANNEL.metadata.catalogue.path=/geonetwork/srv/en/csw
#search.channel.METADATA_CATALOGUE_CHANNEL.image.url.fi=http://geonetwork.nls.fi/geonetwork/srv/fi/resources.get.uuid?access=public&
#search.channel.METADATA_CATALOGUE_CHANNEL.image.url.sv=http://geonetwork.nls.fi/geonetwork/srv/sv/resources.get.uuid?access=public&
#search.channel.METADATA_CATALOGUE_CHANNEL.image.url.en=http://geonetwork.nls.fi/geonetwork/srv/en/resources.get.uuid?access=public&
#search.channel.METADATA_CATALOGUE_CHANNEL.fetchpage.url.fi=http://www.paikkatietohakemisto.fi/catalogue/ui/metadata.html?lang=fi&metadataresourceuuid=
#search.channel.METADATA_CATALOGUE_CHANNEL.fetchpage.url.sv=http://www.paikkatietohakemisto.fi/catalogue/ui/metadata.html?lang=sv&metadataresourceuuid=
#search.channel.METADATA_CATALOGUE_CHANNEL.fetchpage.url.en=http://www.paikkatietohakemisto.fi/catalogue/ui/metadata.html?lang=en&metadataresourceuuid=

# Metadata catalogue channel config
#search.channel.METADATA_CATALOGUE_CHANNEL.metadata.catalogue.queryParams=SERVICE=CSW&VERSION=2.0.2&request=GetDomain&PropertyName=

# List of fields to show in advanced form (values retrieved by GetDomain requests)
#search.channel.METADATA_CATALOGUE_CHANNEL.fields=type,serviceType,Title,OrganisationName,Subject,TopicCategory,Language,ResourceLanguage,coverage

# isMulti means user can select multiple values ie. checkbox vs. dropdown
#search.channel.METADATA_CATALOGUE_CHANNEL.field.type.isMulti=true

# this means that if type has value 'service' add to the same filter operation any serviceType parameters as single AND-operation
#search.channel.METADATA_CATALOGUE_CHANNEL.field.type.dependencies=service|serviceType

# filter is the property to be used on filter operations
#search.channel.METADATA_CATALOGUE_CHANNEL.field.type.filter=gmd:hierarchyLevel
#search.channel.METADATA_CATALOGUE_CHANNEL.field.serviceType.isMulti=true
#search.channel.METADATA_CATALOGUE_CHANNEL.field.serviceType.filter=srv:serviceType

# shownIf is sent to client meaning this field is only shown if field 'type' has value 'service' selected, closely related to field.dependencies!
#search.channel.METADATA_CATALOGUE_CHANNEL.field.serviceType.shownIf=[{"type":"service"}]
#search.channel.METADATA_CATALOGUE_CHANNEL.field.Title.filter=gmd:title
#search.channel.METADATA_CATALOGUE_CHANNEL.field.TopicCategory.filter=gmd:topicCategory

# fields without filterOp are treated as LIKE operations, filterOp param value is mapped in code to deegree operations
#search.channel.METADATA_CATALOGUE_CHANNEL.field.Subject.filterOp=COMP_EQUAL
#search.channel.METADATA_CATALOGUE_CHANNEL.field.serviceType.filterOp=COMP_EQUAL
#search.channel.METADATA_CATALOGUE_CHANNEL.field.coverage.filterOp=INTERSECTS

# must match means that this will be a top level filter element added as AND-operations (where as most other fields are added as OR)
#search.channel.METADATA_CATALOGUE_CHANNEL.field.Language.mustMatch=true
#search.channel.METADATA_CATALOGUE_CHANNEL.field.ResourceLanguage.mustMatch=true


##################################
# Configuring search channel implementations for search services.
# Properties are prefixed with 'search.channel.[CHANNEL ID].':
#   className indicates the implementation class
#   other properties are passed on to the implementation class.
##################################

##################################


##################################
# GFI content additional whitelist tags
##################################

# Default whitelist tags:
#   "a", "b", "blockquote", "br", "caption", "cite", "code", "col",
#   "colgroup", "dd", "div", "dl", "dt", "em", "h1", "h2", "h3", "h4", "h5", "h6",
#   "i", "img", "li", "ol", "p", "pre", "q", "small", "span", "strike", "strong",
#   "sub", "sup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "u", "ul"
# Default whitelist attributes for specific tags:
#    "a": "href", "title"
#    "blockquote": "cite"
#    "col": "span", "width"
#    "colgroup": "span", "width"
#    "img": "align", "alt", "height", "src", "title", "width"
#    "ol": "start", "type"
#    "q": "cite"
#    "table": "summary", "width"
#    "td": "abbr", "axis", "colspan", "rowspan", "width"
#    "th": "abbr", "axis", "colspan", "rowspan", "scope","width"
#    "ul": "type"
# Default whitelist protocols for specific tags and attributes
#    "a", "href": "ftp", "http", "https", "mailto"
#    "blockquote", "cite": "http", "https"
#    "cite", "cite": "http", "https"
#    "img", "src": "http", "https"
#    "q", "cite": "http", "https"
# Check changes for the relaxed whitelist at
# https://github.com/jhy/jsoup/blob/master/src/main/java/org/jsoup/safety/Whitelist.java
#
# Additional tags
gficontent.whitelist = button,datalist,fieldset,form,input,keygen,label,legend,option,optgroup,output,select,textarea,script
# Additional attributes for all tags (tag=:all, allowed attr=class, style)
gficontent.whitelist.attr=class,style
# Additional attributes for specific tags (tag=a, allowed attr=hreflang, target)
gficontent.whitelist.attr.a=hreflang,target
# Additional protocols for specifig tags and attributes (tag=img, attr=src, allowed protocol=ftp)
#gficontent.whitelist.attr.img.protocol.src=ftp


###############################################################################################################################

##############################
# Proxy services
##############################
oskari.proxyservices=

###############################################################################################################################

###############################################################################################################################
# wfs-t SITO editor
permission.types = EDIT_LAYER_CONTENT
permission.EDIT_LAYER_CONTENT.name.fi=Muokkaa tasoa
permission.EDIT_LAYER_CONTENT.name.en=Edit layer

##############################
# Oskari Scheduler configuration
##############################
#oskari.scheduler.jobs=spatineo_update
#oskari.scheduler.job.spatineo_update.cronLine=0 */5 * * * ?
#oskari.scheduler.job.spatineo_update.className=org.oskari.spatineo.monitor.UpdateBackendStatusJob
#oskari.scheduler.job.spatineo_update.methodName=scheduledServiceCall

###############################################################################################################################
# Spatineo monitor integration - requires dependency for service-spatineo-monitor in oskari-server to be included on webapp and the spatineo scheduler above
#spatineo.monitoring.url=https://monitor.spatineo.com/api/public/monitoringAPI
#spatineo.monitoring.key=changeme
###############################################################################################################################

###############################################################################################################################
# terrain-profile / Maastoprofiili / Korkeusprofiili
terrain.profile.wcs.endPoint=https://georaster.tampere.fi/geoserver/wcs
terrain.profile.wcs.srs=EPSG:3067
terrain.profile.wcs.demCoverageId=dem2mTreOskari
terrain.profile.wcs.noData=-32768
terrain.profile.wcs.demType=INT
terrain.profile.wcs.demScale=32
terrain.profile.wcs.demOffset=0
###############################################################################################################################

###############################################################################################################################
# KTJ tulosteet
# Kiinteistöt alueina (viranomaiskäyttö)
#ktjpdf.role.layer=2213
#ktjpdf.username=tampereoteraja
#ktjpdf.password=changeme
###############################################################################################################################

# EntraID login information
oskari.entraid.tenantId=azure tenant id goes here
oskari.entraid.appId=app id goes here
oskari.entraid.clientSecret=secret goes here